spring.application.name=springboot_kafka

# Consumer properties

#add more comma seperated if you have
spring.kafka.consumer.bootstrap-servers=localhost:9092
# Consumer group ID
spring.kafka.consumer.group-id=myGroup 

# Deserializer class for message keys
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer 
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
 # What to do when there is no initial offset in Kafka or if the current offset does not exist anymore in the server (earliest, latest, none)
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*




# Producer properties
spring.kafka.producer.bootstrap-servers=localhost:9092 
# Serializer class for message keys
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer 
# Serializer class for message values
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer 
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


